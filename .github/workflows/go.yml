name: Go
on: [pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CARBON_VERSION: "1.8.0"
      CGO_CFLAGS: ${{ format('-I{0}/carbon/current/include/c_api', HOME) }}
      CGO_LDFLAGS: ${{ format('-L{0}/carbon/current/lib/x64 -lMicrosoft.CognitiveServices.Speech.core', HOME) }}
      LD_LIBRARY_PATH: ${{ format('{0}::{1}/carbon/current/lib/x64', LD_LIBRARY_PATH, HOME) }}
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Get Carbon
      run: |
        echo "$HOME/carbon"
        mkdir $HOME/carbon
        pushd $HOME/carbon
        wget https://csspeechstorage.blob.core.windows.net/drop/$CARBON_VERSION/SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        tar xzf SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        rm SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        ln -s SpeechSDK-Linux-$CARBON_VERSION current
        ls -l $HOME/carbon/current/lib/x64
        popd
    - name: Get Carbon Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libssl1.0.0 libasound2
    - name: Build
      run: |
        echo "CGO_CFLAGS"
        echo "$CGO_CFLAGS"
        echo "CGO_LDFLAGS"
        echo "$CGO_LDFLAGS"
        echo "LD_LIBRARY_PATH"
        echo "$LD_LIBRARY_PATH"
        go build -v ./...
    - name: Test
      run: go test ./...


