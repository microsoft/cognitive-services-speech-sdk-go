name: Go
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CARBON_VERSION: "1.10.0"
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Get Carbon
      run: |
        mkdir $HOME/carbon
        pushd $HOME/carbon
        wget https://csspeechstorage.blob.core.windows.net/drop/$CARBON_VERSION/SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        tar xzf SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        rm SpeechSDK-Linux-$CARBON_VERSION.tar.gz
        ln -s SpeechSDK-Linux-$CARBON_VERSION current
        popd
    - name: Get Carbon Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libssl1.0.0 libasound2
    - name: Build
      run: |
        export CGO_CFLAGS="-I$HOME/carbon/current/include/c_api"
        export CGO_LDFLAGS="-L$HOME/carbon/current/lib/x64 -lMicrosoft.CognitiveServices.Speech.core"
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/carbon/current/lib/x64"
        go build -v ./...
    - name: Test
      env:
        DIALOG_SUBSCRIPTION_KEY: ${{ secrets.DIALOG_SUBSCRIPTION_KEY }}
        DIALOG_SUBSCRIPTION_REGION: ${{ secrets.DIALOG_SUBSCRIPTION_REGION }}
        SR_SUBSCRIPTION_KEY: ${{ secrets.SR_SUBSCRIPTION_KEY }}
        SR_SUBSCRIPTION_REGION: ${{ secrets.SR_SUBSCRIPTION_REGION }}
      run: |
        export CGO_CFLAGS="-I$HOME/carbon/current/include/c_api"
        export CGO_LDFLAGS="-L$HOME/carbon/current/lib/x64 -lMicrosoft.CognitiveServices.Speech.core"
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/carbon/current/lib/x64"
        go test ./...


